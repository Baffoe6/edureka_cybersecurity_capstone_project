# Database Deployment for Assessment Results
apiVersion: apps/v1
kind: Deployment
metadata:
  name: assessment-db
  namespace: cybersecurity-capstone
  labels:
    app: assessment-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: assessment-db
  template:
    metadata:
      labels:
        app: assessment-db
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: "pentest_results"
        - name: POSTGRES_USER
          value: "pentest_user"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pentest-secrets
              key: DB_PASSWORD
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - pentest_user
            - -d
            - pentest_results
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - pentest_user
            - -d
            - pentest_results
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: assessment-db-service
  namespace: cybersecurity-capstone
spec:
  selector:
    app: assessment-db
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  type: ClusterIP
---
# Redis Deployment for Caching
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cache
  namespace: cybersecurity-capstone
  labels:
    app: redis-cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-cache
  template:
    metadata:
      labels:
        app: redis-cache
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: redis-pvc
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: cybersecurity-capstone
spec:
  selector:
    app: redis-cache
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  type: ClusterIP
